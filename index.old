var Sequelize = require("sequelize");
const { Op } = require("sequelize");
const Elcontrol;
const CreateDb= ()=>{


var sequelize = new Sequelize(
  "database.sqlite",
  'test',
  'test',
  {
    host: "0.0.0.0",
    dialect: "sqlite",
    pool: {
      max: 5,
      min: 0,
      idle: 10000
    },
    // Data is stored in the file `database.sqlite` in the folder `db`.
    // Note that if you leave your app public, this database file will be copied if
    // someone forks your app. So don't use it to store sensitive information.
    storage: "database.sqlite"
  }
);

// authenticate with the database
sequelize
  .authenticate()
  .then(function(err) {
    console.log("Connection established.");
    // define new table: 'users'
   Elcontrol = sequelize.define("elcontrol", {
        card: {
            type: Sequelize.INTEGER
          },
          relay: {
            type: Sequelize.INTEGER
          },
        type: {
          type: Sequelize.STRING
        },
        groupname: {
            type: Sequelize.STRING
          },
          title: {
            type: Sequelize.STRING
          },
          status: {
            type: Sequelize.INTEGER
          },
          kwh: {
            type: Sequelize.INTEGER
          }
        });
        Elcontrol.sync()
    Auth = sequelize.define("auth", {
            name: {
                type: Sequelize.STRING
              },
              hash: {
                type: Sequelize.STRING
              },
              role: {
                type: Sequelize.STRING
              }
       
      });
      
   // setup();
  })
  .catch(function(err) {
    console.log("Unable to connect to database: ", err);
  })
  .then(function() {
    return Elcontrol.findAll();
  }).then(function(notes) {
    console.log(notes);
  });
}

// populate database with default users
function setup() {
    let defaultlogin=[
{'name':'wolard','hash':'$2b$10$o2Pju99MOZfaPqRuxCwTLe1a3qejkeB/ebJvHz.jf0gWP1u8ugFmG','role':'Admin'}
]
    let defaultvalues=[
{'card':1,'relay':1,'type':'toggle','groupname':'pistorasiat','title':'tolppa 1','status':0,'kwh':0},
{'card':1,'relay':2,'type':'toggle','groupname':'pistorasiat','title':'tolppa 2','status':0,'kwh':0},
{'card':1,'relay':3,'type':'toggle','groupname':'pistorasiat','title':'tolppa 3','status':0,'kwh':0},
{'card':1,'relay':4,'type':'toggle','groupname':'pistorasiat','title':'tolppa 4','status':0,'kwh':0},
{'card':1,'relay':5,'type':'toggle','groupname':'pistorasiat','title':'tolppa 5','status':0,'kwh':0},
{'card':1,'relay':6,'type':'toggle','groupname':'pistorasiat','title':'tolppa 6','status':0,'kwh':0},
{'card':1,'relay':7,'type':'toggle','groupname':'pistorasiat','title':'tolppa 7','status':0,'kwh':0},
{'card':1,'relay':8,'type':'toggle','groupname':'pistorasiat','title':'tolppa 8','status':0,'kwh':0},
{'card':1,'relay':9,'type':'toggle','groupname':'pistorasiat','title':'tolppa 9','status':0,'kwh':0},
{'card':1,'relay':10,'type':'toggle','groupname':'valot','title':'Laiturin Valo Oikea','status':0,'kwh':0},
{'card':1,'relay':11,'type':'toggle','groupname':'valot','title':'Laiturin Valo Vasen','status':0,'kwh':0},
{'card':1,'relay':12,'type':'toggle','groupname':'valot','title':'LÃ¤hestymisvalot','status':0,'kwh':0},

]
 Elcontrol.sync({ force: true })

  //User.sync({ force: true }) // Using 'force: true' for demo purposes. It drops the table users if it already exists and then creates a new one.
    .then(()=> {
      // Add default users to the database
      for (var i = 0; i < defaultvalues.length; i++) {
        // loop through all users
        Elcontrol.create({ 
            card: defaultvalues[i].card,
            relay: defaultvalues[i].relay,
            type: defaultvalues[i].type,
            groupname: defaultvalues[i].groupname,
            title: defaultvalues[i].title,
            status: defaultvalues[i].status,
            kwh: defaultvalues[i].kwh
            
        
        }); 
      }
    });
    
    Auth.sync({ force: true })

  //User.sync({ force: true }) // Using 'force: true' for demo purposes. It drops the table users if it already exists and then creates a new one.
    .then(()=> {
      for (var i = 0; i < defaultlogin.length; i++) {
       
        Auth.create({ 
            name: defaultlogin[i].name,
            hash: defaultlogin[i].hash,
            role: defaultlogin[i].role
                    
        }); 
      }
   
});



}
const dbtest= async () =>{
   
      
      try {
        await CreateDb();
        
        console.log('Connection has been established successfully.');
       
       
      } catch (error) {
        console.error('Unable to connect to the database:', error);
      }

//await CreateDb();

}
CreateDb();
